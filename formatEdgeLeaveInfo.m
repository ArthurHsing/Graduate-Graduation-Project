% 对边缘层所有设备输出的任务进行处理
function[offloadedTasksFromEdge] = formatEdgeLeaveInfo(edgeResultArr)
    global systemConfig;
    frequencyRatio = systemConfig.edgeCPUFrequency./systemConfig.cloudCPUFrequency;
    arriveCloudTimeLine = edgeResultArr.leaveTimeLine;
    offloadedSrvTime = round(edgeResultArr.offloadedSrvTime.*frequencyRatio, systemConfig.d);
    wirelessTrDelayOffloaded = edgeResultArr.wirelessTrDelayOffloaded;
    wiredTrDelay = edgeResultArr.wiredTrDelay;
    if isempty(arriveCloudTimeLine) %没有卸载的任务，就按空处理
        offloadedTasksFromEdge = struct(...
        'arriveCloudTimeLine', {},...
        'offloadedSrvTime', {},...
        'wirelessTrDelay', {},...
        'wiredTrDelay', {}...
        );
    else %有卸载的任务，就正常处理
        offloadedTasksFromEdge = struct(...
        'arriveCloudTimeLine', mat2cell(arriveCloudTimeLine, [1], ones(1, length(arriveCloudTimeLine))),...
        'offloadedSrvTime', mat2cell(offloadedSrvTime, [1], ones(1, length(offloadedSrvTime))),...
        'wirelessTrDelay', mat2cell(wirelessTrDelayOffloaded, [1], ones(1, length(wirelessTrDelayOffloaded))),...
        'wiredTrDelay', mat2cell(wiredTrDelay, [1], ones(1, length(wiredTrDelay)))...
        );        
    end
end